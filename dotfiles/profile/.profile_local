  # if [ -n "$SSH_CLIENT" ]; then
  #     PS1="(proxy) $PS1"
  # fi

# El Capitan Python fix
  # export LANG=en_US.UTF-8
  # export LC_COLLATE=en_US.UTF-8
  # export LC_CTYPE=en_US.UTF-8
  # export LC_MESSAGES=en_US.UTF-8
  # export LC_MONETARY=en_US.UTF-8
  # export LC_NUMERIC=en_US.UTF-8
  # export LC_TIME=en_US.UTF-8
  # export LC_ALL=en_US.UTF-8


## PATHs
# Imports at ipython startup
  # export PYTHONSTARTUP=${HOME}/.ipython/profile_default/startup/00-basic_imports.py

# Add ruby gem user directory to path (check with `gem environment`)
  # export PATH=$PATH:${HOME}/.gem/ruby/2.0.0/bin

# Homebrew Python 3: Activate on demand (virtualenv style)
  # function brewpy3 {
  #     # Function to deactivate
  #     function deactivate {
  #         # Restore original state
  #         if [ ! -z "$_OLD_PATH" ]; then
  #             export PATH=${_OLD_PATH}
  #             export PS1=${_OLD_PS1}
  #             unset _OLD_PATH
  #             unset _OLD_PS1
  #             # Also remove this function from the scope
  #             unset -f deactivate
  #         fi
  #         }
  #     # If we are already running an active py3 environment
  #     deactivate
  #     # Save old env vars
  #     _OLD_PATH=${PATH}
  #     _OLD_PS1=${PS1}
  #     # Set new path on top of all
  #     export PATH=${HOME}/Library/Python/3.6/bin:${PATH}
  #     # Indicate that we are in a python3 environment
  #     export PS1="(BrewPy3) $PS1"
  # }


## ROOT, TRUEE
  # export ROOTSYS=${HOME}/Software/root/5.34.34/build
  # source $ROOTSYS/bin/thisroot.sh
  # useROOT6(){
  #     export ROOTSYS=${HOME}/bin/root6/v6.06.08/build
  #     source $ROOTSYS/bin/thisroot.sh
  #     echo "~~ Activated ROOT6 environment ~~"
  #     echo "     Version $(root-config --version) with Python $(root-config --python-version) in"
  #     echo "       $(root-config --bindir)"
  # }

  # export PATH=${PATH}:${HOME}/Software/TRUEE/3.4/build/bin

# Add 'cling' C++ interpreter path (successor to 'cint')
# export PATH="/Users/tmenne/bin/cling/inst/bin":$PATH

## IceCube
# Create some useful paths
  # export ICPATH="${HOME}/icecube"
  # export ICSOFTWARE="${ICPATH}/software"
  # export ICSVN="http://code.icecube.wisc.edu/svn"
  # export ICREC=$ICSOFTWARE/icerec/parasitic
  # alias icerec="source ${ICREC}/build/activate.sh"
  # export ICSIM=$ICSOFTWARE/simulation/trunk
  # alias icesim="source ${ICSIM}/build/activate.sh"
  # export I3_TESTDATA=~/icecube/data/TESTDATA
  # export ICCOMBO="$ICSOFTWARE/combo/trunk"
  # alias icecombo="source ${ICCOMBO}/build/activate.sh"
# Add path to json file managing the data file paths
  # export ICDATAPATH=$ICPATH/data/ICDataPaths.json
# Add private script folders to PYTHONPATH
  # export PYTHONPATH=$PYTHONPATH:$ICPATH/scripts
  # export ICPROPOSAL="$ICSOFTWARE/PROPOSAL"


## AEI CW software
export CW_PREFIX=${HOME}/cw-software
alias cwon="source $CW_PREFIX/activate-everything; source $CW_PREFIX/activate-prompt.bash"


## Alias
  alias quickhighlight="pbpaste | highlight --syntax=python -O rtf"
  alias nb2html="jupyter nbconvert --to html --template full"
# Exit ranger to current dir
  # alias ranger='ranger --choosedir=$HOME/rangerdir; LASTDIR=`cat $HOME/rangerdir`; cd "$LASTDIR"'
